- name: Install Zabbix packages
  block:
    - name: Install Zabbix release
      apt:
        deb: http://repo.zabbix.com/zabbix/4.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.0-2+xenial_all.deb

    - name: Install Zabbix packages
      apt:
        name:
          - zabbix-agent
          - zabbix-frontend-php
          - zabbix-sender
          - zabbix-server-mysql
        update_cache: True

- name: Enable & start MySQL service
  service:
    name: mysql
    enabled: yes
    state: started

- name: Enable & start Apache2 service
  service:
    name: apache2
    enabled: yes
    state: started

- name: Configure MySQL
  block:
    - name: Disable MySQL auth socket plugin
      shell: |
        set -e
        mysql -uroot -e '\
          USE mysql; \
          UPDATE user SET plugin="mysql_native_password" WHERE user="root"; \
          FLUSH PRIVILEGES;'
        touch /home/vagrant/.vagrant.zabbix.mysql-disable-auth-socket-plugin
      args:
        creates: /home/vagrant/.vagrant.zabbix.mysql-disable-auth-socket-plugin

    - name: Set MySQL root password
      shell: |
        set -e
        mysqladmin -uroot password "{{ settings['mysql.root'].password }}"
        touch /home/vagrant/.vagrant.zabbix.mysql-set-root-password
      args:
        creates: /home/vagrant/.vagrant.zabbix.mysql-set-root-password

    - name: Create MySQL Zabbix DB
      mysql_db:
        name: "{{ settings['mysql.zabbix'].name }}"
        collation: utf8_bin
        login_user: root
        login_password: "{{ settings['mysql.root'].password }}"

    - name: Create Zabbix MySQL user
      mysql_user:
        name: "{{ settings['mysql.zabbix'].user }}"
        password: "{{ settings['mysql.zabbix'].password }}"
        login_user: root
        login_password: "{{ settings['mysql.root'].password }}"
        priv: "{{ settings['mysql.zabbix'].name }}.*:ALL"

    - name: Import Zabbix MySQL schema
      become_user: vagrant
      shell: |
        set -e
        zcat /usr/share/doc/zabbix-server-mysql/create.sql.gz | mysql \
          -u{{ settings['mysql.zabbix'].user }} \
          -p{{ settings['mysql.zabbix'].password }} \
          {{ settings['mysql.zabbix'].name }}
        touch /home/vagrant/.vagrant.zabbix.mysql-create-schema
      args:
        creates: /home/vagrant/.vagrant.zabbix.mysql-create-schema

- name: Grant sudo permissions to user 'zabbix'
  notify:
    - restart-zabbix-server
    - restart-zabbix-agent
  lineinfile:
    path: /etc/sudoers
    line: 'zabbix ALL=(ALL) NOPASSWD: /vagrant/zabbix-varnish-cache.py'

- name: Add user 'zabbix' to group 'varnish'
  notify:
    - restart-zabbix-server
    - restart-zabbix-agent
  user:
    name: zabbix
    groups: varnish
    append: yes

- name: Configure Zabbix Frotend timezone (PHP)
  notify: restart-apache2
  replace:
    path: /etc/apache2/conf-available/zabbix.conf
    regexp: ^\s*#?\s*php_value\s*date\.timezone\s*.*
    replace: php_value date.timezone Europe/Madrid

- name: Configure Zabbix Frontend
  notify: restart-apache2
  template:
    src: zabbix/zabbix.conf.php.tmpl
    dest: /etc/zabbix/web/zabbix.conf.php
    owner: www-data
    group: www-data
    mode: 0644

- name: Configure Zabbix Server
  notify: restart-zabbix-server
  loop:
    - { name: DBHost, value: 127.0.0.1 }
    - { name: DBName, value: "{{ settings['mysql.zabbix'].name }}" }
    - { name: DBUser, value: "{{ settings['mysql.zabbix'].user }}" }
    - { name: DBPassword, value: "{{ settings['mysql.zabbix'].password }}" }
  lineinfile:
    path: /etc/zabbix/zabbix_server.conf
    regexp: ^\s*{{ item.name }}\s*=\s*.*
    insertafter: ^\s*#\s*{{ item.name }}\s*=\s*.*
    line: '{{ item.name }}={{ item.value }}'

- name: Enable & start Zabbix Server service
  service:
    name: zabbix-server
    enabled: yes
    state: started
    # XXX: This parameter is needed because without it, zabbix-server service
    # doesn't start on a system reload.
    use: service

- name: Configure Zabbix Agent
  block:
    - name: Configure Zabbix Agent (UserParameters)
      notify: restart-zabbix-agent
      loop:
        - { name: UserParameter, value: "varnish.discovery[*],sudo /vagrant/zabbix-varnish-cache.py -i '$1' discover '$2'" }
        - { name: UserParameter, value: "varnish.stats[*],sudo /vagrant/zabbix-varnish-cache.py -i '$1' stats" }
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        # Can't use insertafter because of Ansible bug: https://github.com/ansible/ansible/issues/38655
        # insertafter: ^\s*#\s*{{ item.name }}\s*=\s*.*
        line: '{{ item.name }}={{ item.value }}'
    - name: Configure Zabbix Agent (other)
      notify: restart-zabbix-agent
      loop:
        - { name: Hostname, value: dev }
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: ^\s*{{ item.name }}\s*=\s*.*
        insertafter: ^\s*#\s*{{ item.name }}\s*=\s*.*
        line: '{{ item.name }}={{ item.value }}'

- name: Enable & start Zabbix Agent service
  service:
    name: zabbix-agent
    enabled: yes
    state: started
    # XXX: This parameter is needed because without it, zabbix-agent service
    # doesn't start on a system reload.
    use: service
