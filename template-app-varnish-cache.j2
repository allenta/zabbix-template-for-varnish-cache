{%- set name = name|default('Varnish Cache') -%}

{%- set lite = lite|default(0)|int > 0 -%}

{%- set master = 'varnish.stats["{$VARNISH_CACHE.LOCATIONS}"]' -%}

{#-#########################################################################-#}
{#- MACROS -#}
{#-#########################################################################-#}

{%- macro item_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'TRAP': 2,
            'ZABBIX_ACTIVE': 7,
            'CALCULATED': 15,
            'DEPENDENT': 18,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro item_value_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'FLOAT': 0,
            'UNSIGNED': 3,
            'TEXT': 4,
            'DEPENDENT': 18,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro trigger_priority(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'WARNING': 2,
            'HIGH': 4,
            'DISASTER': 5,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro trigger_recovery(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'EXPRESSION': 0,
            'RECOVERY_EXPRESSION': 1,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro preprocessing_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'BOOL_TO_DECIMAL': 6,
            'CHANGE_PER_SECOND': 10,
            'JSONPATH': 12,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro preprocessing_error_handler(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'ORIGINAL_ERROR': 0,
            'DISCARD_VALUE': 1,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_type(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'NORMAL': 0,
            'STACKED': 1,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_item_drawtype(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'SINGLE_LINE': 0,
            'FILLED_REGION': 1,
            'BOLD_LINE': 2,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_item_yaxisside(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'LEFT': 0,
            'RIGHT': 1,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro graph_item_calc_fnc(name) -%}
    {%- if version == '4.4' -%}
        {{ name }}
    {%- else -%}
        {{ {
            'MIN': 1,
            'AVG': 2,
        }[name] }}
    {%- endif -%}
{%- endmacro -%}

{%- macro trigger(definition) -%}
    <expression>{{ definition.expression|e }}</expression>
    <name>{{ definition.name|e }}</name>
    <priority>{{ trigger_priority(definition.priority) }}</priority>
    {% if 'recovery' in definition %}
        <recovery_mode>{{ trigger_priority('RECOVERY_EXPRESSION') }}</recovery_mode>
        <recovery_expression>{{ definition.recovery|e }}</recovery_expression>
    {% else %}
        <recovery_mode>{{ trigger_priority('EXPRESSION') }}</recovery_mode>
        <recovery_expression/>
    {% endif %}
    {% if version in ('4.0', '4.2') %}
        <correlation_mode>0</correlation_mode>
        <correlation_tag/>
        <url/>
        <status>0</status>
        <description/>
        <type>0</type>
        <manual_close>0</manual_close>
        <dependencies/>
        <tags/>
    {% endif %}
{%- endmacro -%}

{%- macro discovery_rule(rule, items, triggers, graphs) -%}
    <discovery_rule>
        <name>{{ rule.name|e }}</name>
        <type>{{ item_type('ZABBIX_ACTIVE') }}</type>
        <key>{{ rule.key|e }}</key>
        <delay>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:&quot;{{ rule.context }}&quot;}</delay>
        <lifetime>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:&quot;{{ rule.context }}&quot;}</lifetime>
        {% if version in ('4.0', '4.2') %}
            <snmp_community/>
            <snmp_oid/>
            <status>0</status>
            <allowed_hosts/>
            <snmpv3_contextname/>
            <snmpv3_securityname/>
            <snmpv3_securitylevel>0</snmpv3_securitylevel>
            <snmpv3_authprotocol>0</snmpv3_authprotocol>
            <snmpv3_authpassphrase/>
            <snmpv3_privprotocol>0</snmpv3_privprotocol>
            <snmpv3_privpassphrase/>
            <params/>
            <ipmi_sensor/>
            <authtype>0</authtype>
            <username/>
            <password/>
            <publickey/>
            <privatekey/>
            <port/>
            <filter>
                <evaltype>0</evaltype>
                <formula/>
                <conditions/>
            </filter>
            <description/>
            <host_prototypes/>
            <jmx_endpoint/>
            <timeout>3s</timeout>
            <url/>
            <query_fields/>
            <posts/>
            <status_codes>200</status_codes>
            <follow_redirects>1</follow_redirects>
            <post_type>0</post_type>
            <http_proxy/>
            <headers/>
            <retrieve_mode>0</retrieve_mode>
            <request_method>0</request_method>
            <allow_traps>0</allow_traps>
            <ssl_cert_file/>
            <ssl_key_file/>
            <ssl_key_password/>
            <verify_peer>0</verify_peer>
            <verify_host>0</verify_host>
        {% endif %}
        {% if version == '4.2' %}
            <lld_macro_paths/>
            <preprocessing/>
            <master_item/>
        {% endif %}
        <item_prototypes>
            {% for item in items %}
                <item_prototype>
                    <name>Varnish Cache[{{ '{#' }}LOCATION}] - {{ item.name|e }}</name>
                    <type>{{ item_type(item.type) }}</type>
                    <key>{{ item.key|e }}</key>
                    {% if 'delay' in item and item.delay %}
                        <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
                    {% else %}
                        <delay>0</delay>
                    {% endif %}
                    {% if 'history' in item and not item.history %}
                        <history>0</history>
                    {% else %}
                        <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                    {% endif %}
                    {% if 'trends' in item and not item.trends %}
                        <trends>0</trends>
                    {% else %}
                        <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                    {% endif %}
                    <value_type>{{ item_value_type(item.value_type) }}</value_type>
                    <units>{{ item.units|default('')|e }}</units>
                    <params>{{ item.params|default('')|e }}</params>
                    <applications>
                        <application>
                            <name>Varnish Cache</name>
                        </application>
                    </applications>
                    {% if 'master_item_key' in item %}
                        <master_item>
                            <key>{{ item.master_item_key|e }}</key>
                        </master_item>
                    {% elif version in ('4.0', '4.2') %}
                        <master_item/>
                    {% endif %}
                    {% if 'preprocessing' in item %}
                        <preprocessing>
                            {% for step in item.preprocessing %}
                                <step>
                                    <type>{{ preprocessing_type(step.type) }}</type>
                                    <params>{{ step.params|default('')|e }}</params>
                                    {% if version in ('4.2', '4.4') %}
                                        <error_handler>{{ preprocessing_error_handler(step.error_handler|default('ORIGINAL_ERROR')) }}</error_handler>
                                        <error_handler_params/>
                                    {% endif %}
                                </step>
                            {% endfor %}
                        </preprocessing>
                    {% elif version in ('4.0', '4.2') %}
                        <preprocessing/>
                    {% endif %}
                    {% if version in ('4.0', '4.2') %}
                        <snmp_community/>
                        <snmp_oid/>
                        <status>0</status>
                        <allowed_hosts/>
                        <snmpv3_contextname/>
                        <snmpv3_securityname/>
                        <snmpv3_securitylevel>0</snmpv3_securitylevel>
                        <snmpv3_authprotocol>0</snmpv3_authprotocol>
                        <snmpv3_authpassphrase/>
                        <snmpv3_privprotocol>0</snmpv3_privprotocol>
                        <snmpv3_privpassphrase/>
                        <ipmi_sensor/>
                        <authtype>0</authtype>
                        <username/>
                        <password/>
                        <publickey/>
                        <privatekey/>
                        <port/>
                        <description/>
                        <inventory_link>0</inventory_link>
                        <valuemap/>
                        <logtimefmt/>
                        <jmx_endpoint/>
                        <timeout>3s</timeout>
                        <url/>
                        <query_fields/>
                        <posts/>
                        <status_codes>200</status_codes>
                        <follow_redirects>1</follow_redirects>
                        <post_type>0</post_type>
                        <http_proxy/>
                        <headers/>
                        <retrieve_mode>0</retrieve_mode>
                        <request_method>0</request_method>
                        <output_format>0</output_format>
                        <allow_traps>0</allow_traps>
                        <ssl_cert_file/>
                        <ssl_key_file/>
                        <ssl_key_password/>
                        <verify_peer>0</verify_peer>
                        <verify_host>0</verify_host>
                        <application_prototypes/>
                    {% endif %}
                </item_prototype>
            {% endfor %}
        </item_prototypes>
        <trigger_prototypes>
            {% for definition in triggers %}
                <trigger_prototype>
                    {{ trigger(definition) }}
                </trigger_prototype>
            {% endfor %}
        </trigger_prototypes>
        <graph_prototypes>
            {% for graph in graphs %}
                <graph_prototype>
                    <name>Varnish Cache[{{ '{#' }}LOCATION}] &gt; {{ graph.name|e }}</name>
                    <type>{{ graph_type(graph.type|default('NORMAL')) }}</type>
                    <graph_items>
                        {% for gitem in graph['items'] %}
                            <graph_item>
                                <sortorder>{{ loop.index0 }}</sortorder>
                                <drawtype>{{ graph_item_drawtype(gitem.drawtype|default('SINGLE_LINE')) }}</drawtype>
                                <color>{{ gitem.color }}</color>
                                <yaxisside>{{ graph_item_yaxisside(gitem.yaxisside|default('LEFT')) }}</yaxisside>
                                <calc_fnc>{{ graph_item_calc_fnc(gitem.calc_fnc|default('AVG')) }}</calc_fnc>
                                <item>
                                    <host>Template App {{ name }}</host>
                                    <key>{{ gitem.key|e }}</key>
                                </item>
                                {% if version in ('4.0', '4.2') %}
                                    <type>0</type>
                                {% endif %}
                            </graph_item>
                        {% endfor %}
                    </graph_items>
                    {% if version in ('4.0', '4.2') %}
                        <width>900</width>
                        <height>200</height>
                        <yaxismin>0.0000</yaxismin>
                        <yaxismax>100.0000</yaxismax>
                        <show_work_period>1</show_work_period>
                        <show_triggers>1</show_triggers>
                        <show_legend>1</show_legend>
                        <show_3d>0</show_3d>
                        <percent_left>0.0000</percent_left>
                        <percent_right>0.0000</percent_right>
                        <ymin_type_1>0</ymin_type_1>
                        <ymax_type_1>0</ymax_type_1>
                        <ymin_item_1>0</ymin_item_1>
                        <ymax_item_1>0</ymax_item_1>
                    {% endif %}
                </graph_prototype>
            {% endfor %}
        </graph_prototypes>
    </discovery_rule>
{%- endmacro -%}

{#-#########################################################################-#}
{#- TRIGGERS -#}
{#-#########################################################################-#}

{%- set varnish_processes_trigger =
    {
        'name': 'Varnish Cache is not running',
        'expression':
            '{Template App ' + name + ':proc.num[varnishd].last()}'
            '<{$VARNISH_CACHE.VARNISH_PROCESSES.MIN}',
        'priority': 'DISASTER',
    } -%}

{%- set varnish_ncsa_log_processes_trigger =
    {
        'name': 'Varnish NCSA log is not running',
        'expression':
            '{Template App ' + name + ':proc.num[varnishncsa].last()}'
            '<{$VARNISH_CACHE.NCSA_PROCESSES.MIN}',
        'priority': 'DISASTER',
    } -%}

{%- set varnish_raw_log_processes_trigger =
    {
        'name': 'Varnish raw log is not running',
        'expression':
            '{Template App ' + name + ':proc.num[varnishlog].last()}'
            '<{$VARNISH_CACHE.RAW_LOG_PROCESSES.MIN}',
        'priority': 'DISASTER',
    } -%}

{%- set varnish_agent_processes_trigger =
    {
        'name': 'Varnish Agent is not running',
        'expression':
            '{Template App ' + name + ':proc.num[varnish-agent].last()}'
            '<{$VARNISH_CACHE.AGENT_PROCESSES.MIN}',
        'priority': 'DISASTER',
    } -%}

{%- set varnish_broadcaster_processes_trigger =
    {
        'name': 'Varnish Broadcaster is not running',
        'expression':
            '{Template App ' + name + ':proc.num[broadcaster].last()}'
            '<{$VARNISH_CACHE.BROADCASTER_PROCESSES.MIN}',
        'priority': 'DISASTER',
    } -%}

{%- set vcs_agent_processes_trigger =
    {
        'name': 'VCS Agent is not running',
        'expression':
            '{Template App ' + name + ':proc.num[vcs-agent].last()}'
            '<{$VARNISH_CACHE.VCS_AGENT_PROCESSES.MIN}',
        'priority': 'DISASTER',
    } -%}

{#-#########################################################################-#}
{#- MAIN -#}
{#-#########################################################################-#}

<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>{{ version }}</version>
    <date>2018-12-28T11:56:28Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template App {{ name }}</template>
            <name>Template App {{ name }}</name>
            {% if version in ('4.0', '4.2') %}
                <description/>
            {% endif %}
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Varnish Cache</name>
                </application>
            </applications>
            <templates/>
            <screens/>
            <httptests/>
            {% if version in ('4.2', '4.4') %}
                <tags>
                    <tag>
                        <tag>App</tag>
                        <value>Varnish Cache</value>
                    </tag>
                </tags>
            {% endif %}

            {#-#############################################################-#}
            {#- ITEMS -#}
            {#-#############################################################-#}

            <items>
                {% for item in [
                        {
                            'name': 'stats',
                            'key': master,
                            'history': false,
                            'trends': false,
                            'value_type': 'TEXT',
                            'triggers': [],
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[varnishd]',
                            'value_type': 'UNSIGNED',
                            'triggers': [varnish_processes_trigger],
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[varnishncsa]',
                            'value_type': 'UNSIGNED',
                            'triggers': [varnish_ncsa_log_processes_trigger],
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[varnishlog]',
                            'value_type': 'UNSIGNED',
                            'triggers': [varnish_raw_log_processes_trigger],
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[varnish-agent]',
                            'value_type': 'UNSIGNED',
                            'triggers': [varnish_agent_processes_trigger],
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[broadcaster]',
                            'value_type': 'UNSIGNED',
                            'triggers': [varnish_broadcaster_processes_trigger],
                        },
                        {
                            'name': '$1 processes',
                            'key': 'proc.num[vcs-agent]',
                            'value_type': 'UNSIGNED',
                            'triggers': [vcs_agent_processes_trigger],
                        },
                    ] %}
                    <item>
                        <name>Varnish Cache - {{ item.name|e }}</name>
                        <type>{{ item_type('ZABBIX_ACTIVE') }}</type>
                        <key>{{ item.key|e }}</key>
                        <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
                        {% if 'history' in item and not item.history %}
                            <history>0</history>
                        {% else %}
                            <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                        {% endif %}
                        {% if 'trends' in item and not item.trends %}
                            <trends>0</trends>
                        {% else %}
                            <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                        {% endif %}
                        <value_type>{{ item_value_type(item.value_type) }}</value_type>
                        <applications>
                            <application>
                                <name>Varnish Cache</name>
                            </application>
                        </applications>
                        {% if version in ('4.0', '4.2') %}
                            <snmp_community/>
                            <snmp_oid/>
                            <status>0</status>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing/>
                            <jmx_endpoint/>
                            <timeout>3s</timeout>
                            <url/>
                            <query_fields/>
                            <posts/>
                            <status_codes>200</status_codes>
                            <follow_redirects>1</follow_redirects>
                            <post_type>0</post_type>
                            <http_proxy/>
                            <headers/>
                            <retrieve_mode>0</retrieve_mode>
                            <request_method>0</request_method>
                            <output_format>0</output_format>
                            <allow_traps>0</allow_traps>
                            <ssl_cert_file/>
                            <ssl_key_file/>
                            <ssl_key_password/>
                            <verify_peer>0</verify_peer>
                            <verify_host>0</verify_host>
                            <master_item/>
                        {% endif %}
                        {% if version == '4.4' and item.triggers %}
                            <triggers>
                                {% for definition in item.triggers %}
                                    <trigger>
                                        {{ trigger(definition) }}
                                    </trigger>
                                {% endfor %}
                            </triggers>
                        {% endif %}
                    </item>
                {% endfor %}
            </items>

            {#-#############################################################-#}
            {#- DISCOVERY RULES -#}
            {#-#############################################################-#}

            <discovery_rules>
                {#-#########################################################-#}
                {#- ITEMS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Items discovery',
                        'key': 'varnish.discovery["{$VARNISH_CACHE.LOCATIONS}","items"]',
                        'context': 'items',
                    },
                    [
                        {
                            'name': 'MAIN.backend_busy (backend connections too many / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_busy"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_busy\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.backend_conn (backend connections successfully stablished / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_conn"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_conn\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.backend_fail (backend connection failures / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_fail"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_fail\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.backend_recycle (backend connection recycles / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_recycle"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_recycle\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.backend_req (backend requests made / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_req"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_req\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.backend_retry (backend connnections retry / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_retry"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_retry\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.backend_reuse (backend connection reuses / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_reuse"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_reuse\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.backend_unhealthy (backend connections not attempted / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_unhealthy"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.backend_unhealthy\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.bans (number of bans)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.bans\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.bans_lurker_obj_killed (objects killed by bans lurker / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans_lurker_obj_killed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.bans_lurker_obj_killed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.bans_lurker_obj_killed_cutoff (objects killed by bans lurker for cutoff / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans_lurker_obj_killed_cutoff"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.bans_lurker_obj_killed_cutoff\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.bans_obj_killed (objects killed by bans during lookup / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans_obj_killed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.bans_obj_killed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.busy_killed (requests killed after sleep on busy objhdr / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.busy_killed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.busy_killed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.busy_sleep (requests sent to sleep on busy objhdr / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.busy_sleep"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.busy_sleep\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.busy_wakeup (requests woken after sleep on busy objhdr / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.busy_wakeup"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.busy_wakeup\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.cache_hit (cache hits / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hit"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.cache_hit\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.cache_hitmiss (cache hits for miss / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hitmiss"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.cache_hitmiss\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.cache_hitpass (cache hits for pass / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hitpass"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.cache_hitpass\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.cache_hit_grace (cache grace hits / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hit_grace"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.cache_hit_grace\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.cache_miss (cache misses / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_miss"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.cache_miss\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.client_resp_500 (delivery failed due to insufficient workspace / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_resp_500"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.client_resp_500\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.client_req (good -parseable- client requests received / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_req"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.client_req\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.client_req_400 (client requests received, subject to 400 errors / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_req_400"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.client_req_400\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.client_req_417 (client requests received, subject to 417 errors / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_req_417"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.client_req_417\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.esi_errors (ESI parse errors -unlock- / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.esi_errors"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.esi_errors\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.esi_maxdepth (ESI hit max_esi_depth / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.esi_maxdepth"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.esi_maxdepth\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.esi_warnings (ESI parse warnings -unlock- / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.esi_warnings"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.esi_warnings\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_1xx (beresps with no body because of 1xx responses / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_1xx"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_1xx\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_204 (beresps with no body because of 204 responses / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_204"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_204\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_304 (beresps with not body because of 304 responses / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_304"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_304\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_bad (bad fetches because beresp.body length/fetch could not be determined / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_bad"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_bad\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_chunked (beresps with body chunked / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_chunked"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_chunked\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_eof (beresps with body EOF / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_eof"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_eof\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_failed (failed fetches -all causes- / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_failed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_failed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_head (beresps with not body because of HEAD requests / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_head"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_head\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_length (beresps with body Content-Length / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_length"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_length\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_none (beresps with no body / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_none"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_none\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.fetch_no_thread (failed fetches because no thread available / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_no_thread"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.fetch_no_thread\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.goto_dns_cache_hits (cache hits within vmod_goto\'s DNS / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.goto_dns_cache_hits"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.goto_dns_cache_hits\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.goto_dns_lookup_fails (number of unresolved DNS lookups from vmod_goto\'s DNS / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.goto_dns_lookup_fails"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.goto_dns_lookup_fails\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.goto_dns_lookups (number of DNS lookups from vmod_goto\'s DNS / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.goto_dns_lookups"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.goto_dns_lookups\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VMOD_HTTP.handle_requests (HTTP requests / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VMOD_HTTP.handle_requests"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VMOD_HTTP.handle_requests\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VMOD_HTTP.handle_completed (completed HTTP requests / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VMOD_HTTP.handle_completed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VMOD_HTTP.handle_completed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VMOD_HTTP.handle_abandon (abandoned HTTP requests / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VMOD_HTTP.handle_abandon"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VMOD_HTTP.handle_abandon\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.losthdr (HTTP header overflows / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.losthdr"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.losthdr\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_backend (number of backends)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_backend"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_backend\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_vcl (number of loaded VCLs in total)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_vcl"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_vcl\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.vmods (loaded VMODs)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.vmods"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.vmods\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_expired (expired objects / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_expired"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_expired\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_gunzip (gunzip operations / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_gunzip"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_gunzip\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_gzip (gzip operations / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_gzip"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_gzip\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_lru_limited (nuke_limit reachs / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_lru_limited"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_lru_limited\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_lru_nuked (LRU nuked objects / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_lru_nuked"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_lru_nuked\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_lru_moved (LRU moved objects / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_lru_moved"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_lru_moved\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_object (object structs made)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_object"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_object\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_objectcore (objectcore structs made)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_objectcore"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_objectcore\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_objecthead (objecthead structs made)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_objecthead"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_objecthead\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_obj_purged (purged objects / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_obj_purged"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_obj_purged\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_purges (purge operations executed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_purges"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_purges\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.n_test_gunzip (test gunzip operations / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_test_gunzip"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.n_test_gunzip\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.req_dropped (HTTP/2 stream refused / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.req_dropped"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.req_dropped\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sc_vcl_failure (session Err VCL_FAILURE / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sc_vcl_failure"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sc_vcl_failure\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_closed (sessions closed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_closed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_closed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_closed_err (sessions closed with error / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_closed_err"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_closed_err\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_conn (sessions successfully accepted / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_conn"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_conn\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_drop (sessions dropped due to lack of worker thread / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_drop"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_drop\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_dropped (sessions dropped because the queue was too long / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_dropped"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_dropped\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_fail (sessions TCP accept failures / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_fail\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_fail_ebadf (session accept failures: bad file descriptor / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_ebadf"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_fail_ebadf\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_fail_econnaborted (session accept failures: connection aborted / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_econnaborted"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_fail_econnaborted\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_fail_eintr (session accept failures: interrupted system call / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_eintr"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_fail_eintr\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_fail_emfile (session accept failures: too many open files / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_emfile"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_fail_emfile\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_fail_enomem (session accept failures: not enough memory / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_enomem"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_fail_enomem\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_fail_other (session accept failures: other / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_other"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_fail_other\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_queued (sessions queued waiting for a thread / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_queued"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_queued\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.sess_readahead (sessions read ahead / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_readahead"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.sess_readahead\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_fetch (backend fetches initiated / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_fetch"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_fetch\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_pass (passed requests seen / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pass"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_pass\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_pipe (pipe sessions seen / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_pipe\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_pipe_hdrbytes (pipe request header bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe_hdrbytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_pipe_hdrbytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_pipe_in (piped bytes from client / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe_in"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_pipe_in\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_pipe_out (piped bytes to client / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe_out"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_pipe_out\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_req (requests seen / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_req"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_req\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_req_bodybytes (request body bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_req_bodybytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_req_bodybytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_req_hdrbytes (request header bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_req_hdrbytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_req_hdrbytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_resp_bodybytes (response body bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_resp_bodybytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_resp_bodybytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_resp_hdrbytes (response header bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_resp_hdrbytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_resp_hdrbytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_sess (sessions seen / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_sess"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_sess\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.s_synth (synthetic responses made / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_synth"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.s_synth\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.threads (number of threads in all pools)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.threads\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.threads_created (threads created in all pools / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_created"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.threads_created\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.threads_destroyed (threads destroyed in all pools / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_destroyed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.threads_destroyed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.threads_failed (failed thread creations / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_failed"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.threads_failed\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.threads_limited (times more threads were needed but limit was reached in a thread pool / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_limited"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.threads_limited\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.thread_queue_len (length of session queue waiting for threads)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.thread_queue_len"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.thread_queue_len\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.uptime (child process uptime)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.uptime"]',
                            'value_type': 'UNSIGNED',
                            'units': 'uptime',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.uptime\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.vcl_fail (VCL failures / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.vcl_fail"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.vcl_fail\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.ws_backend_overflow (workspace_backend overflows / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_backend_overflow"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.ws_backend_overflow\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.ws_client_overflow (workspace_client overflows / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_client_overflow"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.ws_client_overflow\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.ws_session_overflow (workspace_session overflows / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_session_overflow"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.ws_session_overflow\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MAIN.ws_thread_overflow (workspace_thread overflows / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_thread_overflow"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MAIN.ws_thread_overflow\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MGT.uptime (management process uptime)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MGT.uptime"]',
                            'value_type': 'UNSIGNED',
                            'units': 'uptime',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MGT.uptime\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'cache_hit_ratio',
                            'type': 'CALCULATED',
                            'key': 'varnish["{#LOCATION_ID}","cache_hit_ratio"]',
                            'value_type': 'FLOAT',
                            'units': '%',
                            'delay': true,
                            'params': '100*last("varnish.stat[\\"{#LOCATION_ID}\\",\\"MAIN.cache_hit\\"]")/(last("varnish.stat[\\"{#LOCATION_ID}\\",\\"MAIN.cache_hit\\"]")+last("varnish.stat[\\"{#LOCATION_ID}\\",\\"MAIN.cache_miss\\"]")+(count("varnish.stat[\\"{#LOCATION_ID}\\",\\"MAIN.cache_hit\\"]",#1,0)*count("varnish.stat[\\"{#LOCATION_ID}\\",\\"MAIN.cache_miss\\"]",#1,0)))',
                        },
                        {
                            'name': 'VHA6.broadcast_candidates (broadcast candidates / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_candidates"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.broadcast_candidates\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.broadcast_nocache (skipped broadcasts: uncacheable / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_nocache"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.broadcast_nocache\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.broadcast_skip (skipped broadcasts: skip / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_skip"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.broadcast_skip\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.broadcast_lowttl (skipped broadcasts: low TTL or grace / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_lowttl"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.broadcast_lowttl\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.broadcast_toolarge (skipped broadcasts: too large / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_toolarge"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.broadcast_toolarge\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.broadcasts (executed broadcasts / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcasts"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.broadcasts\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.fetch_self (self replication notifications / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_self"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.fetch_self\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.fetch_peer (peer replication notifications / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_peer"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.fetch_peer\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.fetch_origin (replication requests / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_origin"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.fetch_origin\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.fetch_origin_deliver (replication responses / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_origin_deliver"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.fetch_origin_deliver\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.fetch_peer_insert (replication insertions / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_peer_insert"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.fetch_peer_insert\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_version_mismatch',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_version_mismatch"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_version_mismatch\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_no_token',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_no_token"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_no_token\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_bad_token',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_bad_token"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_bad_token\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_stale_token',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_stale_token"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_stale_token\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_rate_limited',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_rate_limited"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_rate_limited\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_fetch_insert',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_fetch_insert"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_fetch_insert\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_origin_mismatch',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_origin_mismatch"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_origin_mismatch\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VHA6.error_origin_miss',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_origin_miss"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VHA6.error_origin_miss\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                    ],
                    [
                        {
                            'name': 'Varnish Cache[{#LOCATION}] has been restarted',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.uptime"].last()}'
                                '<{$VARNISH_CACHE.MAIN_UPTIME.MIN:"{#LOCATION_ID}"} or'
                                ' {Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MGT.uptime"].last()}'
                                '<{$VARNISH_CACHE.MGT_UPTIME.MIN:"{#LOCATION_ID}"}',
                            'priority': 'HIGH',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] has surpassed {$VARNISH_CACHE.THREADS.MAX} threads',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.threads"].last()}'
                                '>{$VARNISH_CACHE.THREADS.MAX:"{#LOCATION_ID}"}',
                            'priority': 'WARNING',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] is generating HTTP header overflows',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.losthdr"].last()}'
                                '>{$VARNISH_CACHE.HTTP_HEADER_OVERFLOWS_RATE.MAX:"{#LOCATION_ID}"}',
                            'priority': 'WARNING',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] is generating VCL failures',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.vcl_fail"].last()}'
                                '>{$VARNISH_CACHE.VCL_FAILURES_RATE.MAX:"{#LOCATION_ID}"}',
                            'priority': 'WARNING',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] is generating workspace overflows',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.client_resp_500"].last()}'
                                '>{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:"{#LOCATION_ID}"} or'
                                ' {Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.ws_backend_overflow"].last()}'
                                '>{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:"{#LOCATION_ID}"} or'
                                ' {Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.ws_client_overflow"].last()}'
                                '>{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:"{#LOCATION_ID}"} or'
                                ' {Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.ws_session_overflow"].last()}'
                                '>{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:"{#LOCATION_ID}"} or'
                                ' {Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.ws_thread_overflow"].last()}'
                                '>{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:"{#LOCATION_ID}"}',
                            'priority': 'WARNING',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] is getting backend connection failures',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.backend_fail"].min({$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.SAMPLES:"{#LOCATION_ID}"})}'
                                '>{$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.MAX:"{#LOCATION_ID}"}',
                            'priority': 'WARNING',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] is nuking objects',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.n_lru_nuked"].last()}'
                                '>{$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.MAX:"{#LOCATION_ID}"}',
                            'recovery':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.n_lru_nuked"].max({$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.RECOVERY.SAMPLES:"{#LOCATION_ID}"})}'
                                '<={$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.MAX:"{#LOCATION_ID}"}',
                            'priority': 'WARNING',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] is reaching nuke_limit',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.n_lru_limited"].last()}'
                                '>{$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.MAX:"{#LOCATION_ID}"}',
                            'recovery':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MAIN.n_lru_limited"].max({$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.RECOVERY.SAMPLES:"{#LOCATION_ID}"})}'
                                '<={$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.MAX:"{#LOCATION_ID}"}',
                            'priority': 'WARNING',
                        },
                    ],
                    [
                        {
                            'name': 'Backends: connections activity',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_recycle"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_reuse"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_retry"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_busy"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_unhealthy"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_fail"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends: connections rate',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_conn"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends: fetches activity',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_fetch"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_head"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_length"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_chunked"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_eof"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_none"]',
                                },
                                {
                                    'color': 'C8C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_1xx"]',
                                },
                                {
                                    'color': '009600',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_204"]',
                                },
                                {
                                    'color': '960000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_304"]',
                                },
                                {
                                    'color': '000096',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_bad"]',
                                },
                                {
                                    'color': '960096',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_failed"]',
                                },
                                {
                                    'color': '009696',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.fetch_no_thread"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends: number',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_backend"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends: request rate',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.backend_req"]',
                                },
                            ],
                        },
                        {
                            'name': 'Cache',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hit"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hit_grace"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hitpass"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_hitmiss"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.cache_miss"]',
                                },
                                {
                                    'drawtype': 'BOLD_LINE',
                                    'color': 'C8C800',
                                    'yaxisside': 'RIGHT',
                                    'key': 'varnish["{#LOCATION_ID}","cache_hit_ratio"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client requests: activity',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.req_dropped"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_req_400"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_req_417"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client requests: busy',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.busy_sleep"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.busy_wakeup"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.busy_killed"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client requests: bytes received',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_req_hdrbytes"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_req_bodybytes"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe_hdrbytes"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe_in"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client requests: bytes sent',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_resp_hdrbytes"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_resp_bodybytes"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe_out"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client requests: passes seen',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pass"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client requests: rate',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_req"]',
                                },
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_req"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client requests: synthetic responses made',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_synth"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client sessions: activity',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_sess"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_closed"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_closed_err"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_drop"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_dropped"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail"]',
                                },
                                {
                                    'color': 'C8C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_queued"]',
                                },
                                {
                                    'color': '009600',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_readahead"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client sessions: failures',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_econnaborted"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_eintr"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_emfile"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_ebadf"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_enomem"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_fail_other"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client sessions: pipes seen',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.s_pipe"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client sessions: rate',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sess_conn"]',
                                },
                            ],
                        },
                        {
                            'name': 'Client sessions: waiting for threads',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.thread_queue_len"]',
                                },
                            ],
                        },
                        {
                            'name': 'ESI: activity',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.esi_warnings"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.esi_errors"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.esi_maxdepth"]',
                                },
                            ],
                        },
                        {
                            'name': 'Gzip: activity',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_gzip"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_gunzip"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_test_gunzip"]',
                                },
                            ],
                        },
                        {
                            'name': 'HTTP header overflows',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.losthdr"]',
                                },
                            ],
                        },
                        {
                            'name': 'Objects: nuke limit overflows',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_lru_limited"]',
                                },
                            ],
                        },
                        {
                            'name': 'Objects: bans',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans"]',
                                },
                            ],
                        },
                        {
                            'name': 'Objects: purges',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_purges"]',
                                },
                            ],
                        },
                        {
                            'name': 'Objects: removals',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_expired"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_lru_nuked"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_lru_moved"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_obj_purged"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans_obj_killed"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans_lurker_obj_killed"]',
                                },
                                {
                                    'color': 'C8C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.bans_lurker_obj_killed_cutoff"]',
                                },
                            ],
                        },
                        {
                            'name': 'Objects: stored',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_object"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_objecthead"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_objectcore"]',
                                },
                            ],
                        },
                        {
                            'name': 'Threads: activity',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_created"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_failed"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_limited"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads_destroyed"]',
                                },
                            ],
                        },
                        {
                            'name': 'Threads: number',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.threads"]',
                                },
                            ],
                        },
                        {
                            'name': 'Uptime',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MGT.uptime"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.uptime"]',
                                },
                            ],
                        },
                        {
                            'name': 'VCLs: number',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.n_vcl"]',
                                },
                            ],
                        },
                        {
                            'name': 'VCLs: failures',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.sc_vcl_failure"]',
                                },
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.vcl_fail"]',
                                },
                            ],
                        },
                        {
                            'name': 'VHA: broadcasts',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_candidates"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_nocache"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_skip"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_lowttl"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcast_toolarge"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.broadcasts"]',
                                },
                            ],
                        },
                        {
                            'name': 'VHA: replications',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_self"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_peer"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_origin"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_origin_deliver"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.fetch_peer_insert"]',
                                },
                            ],
                        },
                        {
                            'name': 'VHA: errors',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_version_mismatch"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_no_token"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_bad_token"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_stale_token"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_rate_limited"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_fetch_insert"]',
                                },
                                {
                                    'color': 'C8C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_origin_mismatch"]',
                                },
                                {
                                    'color': '009600',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VHA6.error_origin_miss"]',
                                },
                            ],
                        },
                        {
                            'name': 'VMODs: number',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.vmods"]',
                                },
                            ],
                        },
                        {
                            'name': 'VMODs: goto',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.goto_dns_cache_hits"]',
                                },
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.goto_dns_lookup_fails"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.goto_dns_lookups"]',
                                },
                            ],
                        },
                        {
                            'name': 'VMODs: http',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VMOD_HTTP.handle_requests"]',
                                },
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VMOD_HTTP.handle_completed"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VMOD_HTTP.handle_abandon"]',
                                },
                            ],
                        },
                        {
                            'name': 'Workspace overflows',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.client_resp_500"]',
                                },
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_backend_overflow"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_client_overflow"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_session_overflow"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MAIN.ws_thread_overflow"]',
                                },
                            ],
                        },
                    ]) }}

                {#-#########################################################-#}
                {#- BACKENDS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Backends discovery',
                        'key': 'varnish.discovery["{$VARNISH_CACHE.LOCATIONS}","backends"]',
                        'context': 'backends',
                    },
                    [
                        {
                            'name': 'VBE.{#SUBJECT}.healthy',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.healthy"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.healthy\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'BOOL_TO_DECIMAL',
                                },
                            ],
                        },
                    ]
                    +
                    ([
                        {
                            'name': 'VBE.{#SUBJECT}.bereq_bodybytes (request body bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.bereq_bodybytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.bereq_bodybytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.bereq_hdrbytes (request header bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.bereq_hdrbytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.bereq_hdrbytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.beresp_bodybytes (response body bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.beresp_bodybytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.beresp_bodybytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.beresp_hdrbytes (response header bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.beresp_hdrbytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.beresp_hdrbytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.busy (fetches not attempted due to backend being busy / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.busy"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.busy\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.conn (connections to backend)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.conn"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.conn\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.fail (connections failed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.fail_eacces (connections failed with EACCES or EPERM / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_eacces"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_eacces\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.fail_eaddrnotavail (connections failed with EADDRNOTAVAIL / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_eaddrnotavail"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_eaddrnotavail\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.fail_econnrefused (connections failed with ECONNREFUSED / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_econnrefused"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_econnrefused\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.fail_enetunreach (connections failed with ENETUNREACH / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_enetunreach"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_enetunreach\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.fail_etimedout (connections failed with ETIMEDOUT / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_etimedout"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_etimedout\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.fail_other (connections failed for other reason / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_other"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_other\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.happy (happy health probe)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.happy"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.happy\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.helddown (connection opens not attempted / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.helddown"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.helddown\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.pipe_hdrbytes (pipe request header bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.pipe_hdrbytes"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.pipe_hdrbytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.pipe_in (piped bytes from backend / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.pipe_in"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.pipe_in\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.pipe_out (piped bytes to backend / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.pipe_out"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.pipe_out\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.req (backend requests sent / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.req"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.req\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.unhealthy (fetches not attempted due to backend being unhealthy / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.unhealthy"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.VBE.{#SUBJECT_ID}.unhealthy\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'VBE.{#SUBJECT}.last_happy',
                            'type': 'CALCULATED',
                            'key': 'varnish["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.last_happy"]',
                            'value_type': 'UNSIGNED',
                            'delay': true,
                            'params': 'band("varnish.stat[\\"{#LOCATION_ID}\\",\\"VBE.{#SUBJECT_ID}.happy\\"]",#1,1)',
                        },
                    ] if not lite else []),
                    [
                        {
                            'name': 'Varnish Cache[{#LOCATION}] {#SUBJECT} backend is sick',
                            'expression': '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.healthy"].max({$VARNISH_CACHE.BACKEND_HEALTHINESS.SAMPLES:"{#LOCATION_ID}:{#SUBJECT_ID}"})}<1',
                            'priority': 'HIGH',
                        },
                    ],
                    [
                        {
                            'name': 'Backends[{#SUBJECT}]: healthiness',
                            'items': [
                                {
                                    'color': '00C800',
                                    'calc_fnc': 'MIN',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.healthy"]',
                                },
                            ] +
                            ([
                                {
                                    'color': 'C80000',
                                    'calc_fnc': 'MIN',
                                    'key': 'varnish["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.last_happy"]',
                                },
                            ] if not lite else []),
                        },
                    ]
                    +
                    ([
                        {
                            'name': 'Backends[{#SUBJECT}]: bytes received from backend',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.beresp_hdrbytes"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.beresp_bodybytes"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.pipe_in"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends[{#SUBJECT}]: bytes sent to backend',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.bereq_hdrbytes"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.bereq_bodybytes"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.pipe_hdrbytes"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.pipe_out"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends[{#SUBJECT}]: concurrent connections to backend',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.conn"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends[{#SUBJECT}]: failed connection attempts',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_eacces"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_eaddrnotavail"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_econnrefused"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_enetunreach"]',
                                },
                                {
                                    'color': '00C8C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_etimedout"]',
                                },
                                {
                                    'color': 'C8C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail_other"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends[{#SUBJECT}]: fetches not attempted',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.unhealthy"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.busy"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.fail"]',
                                },
                                {
                                    'color': 'C800C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.helddown"]',
                                },
                            ],
                        },
                        {
                            'name': 'Backends[{#SUBJECT}]: requests sent to backend',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","VBE.{#SUBJECT_ID}.req"]',
                                },
                            ],
                        },
                    ] if not lite else [])) }}

                {#-#########################################################-#}
                {#- STORAGES DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Storages discovery',
                        'key': 'varnish.discovery["{$VARNISH_CACHE.LOCATIONS}","storages"]',
                        'context': 'storages',
                    },
                    [
                        {
                            'name': 'STG.{#SUBJECT}.c_fail (allocator failures / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_fail"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.c_fail\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.c_memcache_hit (stored objects cache hits bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_memcache_hit"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.c_memcache_hit\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.c_memcache_miss (stored objects cache misses bytes / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_memcache_miss"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.c_memcache_miss\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.g_bytes (bytes outstanding)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_bytes"]',
                            'value_type': 'UNSIGNED',
                            'units': 'B',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_bytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.g_space (bytes available)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_space"]',
                            'value_type': 'UNSIGNED',
                            'units': 'B',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_space\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.g_sparenode (spare nodes available)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_sparenode"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_sparenode\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.g_ykey_keys (number of YKeys registered)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_ykey_keys"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_ykey_keys\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.n_lru_moved (number of LRU move operations / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.n_lru_moved"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.n_lru_moved\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.n_lru_nuked (number of LRU nuked objects / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.n_lru_nuked"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.n_lru_nuked\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.n_vary (number of Vary header keys / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.n_vary"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.STG.{#SUBJECT_ID}.n_vary\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'STG.{#SUBJECT}.cache_hit_ratio',
                            'type': 'CALCULATED',
                            'key': 'varnish["{#LOCATION_ID}","STG.{#SUBJECT_ID}.cache_hit_ratio"]',
                            'value_type': 'FLOAT',
                            'units': '%',
                            'delay': true,
                            'params': '100*last("varnish.stat[\\"{#LOCATION_ID}\\",\\"STG.{#SUBJECT_ID}.c_memcache_hit\\"]")/(last("varnish.stat[\\"{#LOCATION_ID}\\",\\"STG.{#SUBJECT_ID}.c_memcache_hit\\"]")+last("varnish.stat[\\"{#LOCATION_ID}\\",\\"STG.{#SUBJECT_ID}.c_memcache_miss\\"]")+(count("varnish.stat[\\"{#LOCATION_ID}\\",\\"STG.{#SUBJECT_ID}.c_memcache_hit\\"]",#1,0)*count("varnish.stat[\\"{#LOCATION_ID}\\",\\"STG.{#SUBJECT_ID}.c_memcache_miss\\"]",#1,0)))',
                        },
                    ],
                    [
                        {
                            'name': 'Varnish Cache[{#LOCATION}] {#SUBJECT} storage failed to allocate space',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_fail"].last()}'
                                '>{$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.MAX:"{#LOCATION_ID}:{#SUBJECT_ID}"}',
                            'recovery':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_fail"].max({$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.RECOVERY.SAMPLES:"{#LOCATION_ID}:{#SUBJECT_ID}"})}'
                                '<={$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.MAX:"{#LOCATION_ID}:{#SUBJECT_ID}"}',
                            'priority': 'HIGH',
                        },
                        {
                            'name': 'Varnish Cache[{#LOCATION}] {#SUBJECT} storage is running out of spare nodes',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_sparenode"].last()}'
                                '<{$VARNISH_CACHE.SPARE_NODES.MIN:"{#LOCATION_ID}:{#SUBJECT_ID}"}',
                            'recovery':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_sparenode"].last()}'
                                '>{$VARNISH_CACHE.SPARE_NODES.RECOVERY.MIN:"{#LOCATION_ID}:{#SUBJECT_ID}"}',
                            'priority': 'WARNING',
                        },
                    ],
                    [
                        {
                            'name': 'Storages[{#SUBJECT}]: allocator failures',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_fail"]',
                                },
                            ],
                        },
                        {
                            'name': 'Storages[{#SUBJECT}]: bytes outstanding vs. available',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_bytes"]',
                                },
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_space"]',
                                },
                            ],
                        },
                        {
                            'name': 'Storages[{#SUBJECT}]: cache',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_memcache_hit"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.c_memcache_miss"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish["{#LOCATION_ID}","STG.{#SUBJECT_ID}.cache_hit_ratio"]',
                                },
                            ],
                        },
                        {
                            'name': 'Storages[{#SUBJECT}]: nukes',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.n_lru_nuked"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.n_lru_moved"]',
                                },
                            ],
                        },
                        {
                            'name': 'Storages[{#SUBJECT}]: spare nodes available',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_sparenode"]',
                                },
                            ],
                        },
                        {
                            'name': 'Storages[{#SUBJECT}]: vary headers',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.n_vary"]',
                                },
                            ],
                        },
                        {
                            'name': 'Storages[{#SUBJECT}]: YKeys',
                            'items': [
                                {
                                    'drawtype': 'FILLED_REGION',
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","STG.{#SUBJECT_ID}.g_ykey_keys"]',
                                },
                            ],
                        },
                    ]) }}

                {#-#########################################################-#}
                {#- MSE BOOKS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'MSE books discovery',
                        'key': 'varnish.discovery["{$VARNISH_CACHE.LOCATIONS}","mse_books"]',
                        'context': 'mse_books',
                    },
                    [
                        {
                            'name': 'MSE_BOOK.{#SUBJECT}.c_waterlevel_purge (number of objects purged to achieve database waterlevel / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_purge"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_purge\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_BOOK.{#SUBJECT}.c_waterlevel_queue (number of times a thread has been queued waiting for database space / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_queue"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_queue\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_BOOK.{#SUBJECT}.c_waterlevel_runs (number of times the waterlevel purge thread was activated / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_runs"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_runs\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_BOOK.{#SUBJECT}.g_bytes (number of bytes used in the book database)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.g_bytes"]',
                            'value_type': 'UNSIGNED',
                            'units': 'B',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.g_bytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_BOOK.{#SUBJECT}.g_space (number of bytes available in the book database)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.g_space"]',
                            'value_type': 'UNSIGNED',
                            'units': 'B',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.g_space\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_BOOK.{#SUBJECT}.n_vary (number of Vary header keys / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.n_vary"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.n_vary\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                    ],
                    [
                        {
                            'name': 'Varnish Cache[{#LOCATION}] {#SUBJECT} MSE book is running out of space',
                            'expression':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.g_space"].last()}'
                                '<{$VARNISH_CACHE.MSE_BOOK_SPACE.MIN:"{#LOCATION_ID}:{#SUBJECT_ID}"}',
                            'recovery':
                                '{Template App ' + name + ':varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.g_space"].last()}'
                                '>{$VARNISH_CACHE.MSE_BOOK_SPACE.RECOVERY.MIN:"{#LOCATION_ID}:{#SUBJECT_ID}"}',
                            'priority': 'WARNING',
                        },
                    ],
                    [
                        {
                            'name': 'MSE books[{#SUBJECT}]: bytes outstanding vs. available',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.g_bytes"]',
                                },
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.g_space"]',
                                },
                            ],
                        },
                        {
                            'name': 'MSE books[{#SUBJECT}]: vary headers',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.n_vary"]',
                                },
                            ],
                        },
                        {
                            'name': 'MSE books[{#SUBJECT}]: waterlevel',
                            'items': [
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_queue"]',
                                },
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_runs"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_purge"]',
                                },
                            ],
                        },
                    ]) }}

                {#-#########################################################-#}
                {#- MSE STORES DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'MSE stores discovery',
                        'key': 'varnish.discovery["{$VARNISH_CACHE.LOCATIONS}","mse_stores"]',
                        'context': 'mse_stores',
                    },
                    [
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.c_aio_finished_bytes_read (number AIO read bytes executed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_read"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_read\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.c_aio_finished_bytes_write (number AIO write bytes executed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_write"]',
                            'value_type': 'FLOAT',
                            'units': 'Bps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_write\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.c_aio_finished_read (number AIO read operations executed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_read"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_read\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.c_aio_finished_write (number AIO write operations executed / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_write"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_write\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.c_waterlevel_purge (number of objects purged to achieve store waterlevel / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_waterlevel_purge"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_waterlevel_purge\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.c_waterlevel_queue (number of times a thread has been queued waiting for store space / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_waterlevel_queue"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_waterlevel_queue\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.g_alloc_bytes (total number of bytes in allocation extents)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_alloc_bytes"]',
                            'value_type': 'UNSIGNED',
                            'units': 'B',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_alloc_bytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.g_free_bytes (total number of bytes in free extents)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_free_bytes"]',
                            'value_type': 'UNSIGNED',
                            'units': 'B',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_free_bytes\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.g_objects (number of objects in the store)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_objects"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_objects\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                        {
                            'name': 'MSE_STORE.{#SUBJECT}.g_ykey_keys (number of YKeys registered in the store)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_ykey_keys"]',
                            'value_type': 'UNSIGNED',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_ykey_keys\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                            ],
                        },
                    ],
                    [
                    ],
                    [
                        {
                            'name': 'MSE stores[{#SUBJECT}]: AIO bytes read/written',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_read"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_write"]',
                                },
                            ],
                        },
                        {
                            'name': 'MSE stores[{#SUBJECT}]: AIO operations',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_read"]',
                                },
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_aio_finished_write"]',
                                },
                            ],
                        },
                        {
                            'name': 'MSE stores[{#SUBJECT}]: extents',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_alloc_bytes"]',
                                },
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_free_bytes"]',
                                },
                            ],
                        },
                        {
                            'name': 'MSE stores[{#SUBJECT}]: objects',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_objects"]',
                                },
                            ],
                        },
                        {
                            'name': 'MSE stores[{#SUBJECT}]: YKeys',
                            'type': 'STACKED',
                            'items': [
                                {
                                    'color': '00C800',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.g_ykey_keys"]',
                                },
                            ],
                        },
                        {
                            'name': 'MSE stores[{#SUBJECT}]: waterlevel',
                            'items': [
                                {
                                    'color': '0000C8',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_waterlevel_queue"]',
                                },
                                {
                                    'color': 'C80000',
                                    'key': 'varnish.stat["{#LOCATION_ID}","MSE_STORE.{#SUBJECT_ID}.c_waterlevel_purge"]',
                                },
                            ],
                        },
                    ]) }}

                {#-#########################################################-#}
                {#- COUNTERS DISCOVERY -#}
                {#-#########################################################-#}

                {{ discovery_rule(
                    {
                        'name': 'Counters discovery',
                        'key': 'varnish.discovery["{$VARNISH_CACHE.LOCATIONS}","counters"]',
                        'context': 'counters',
                    },
                    [
                        {
                            'name': 'COUNTER.{#SUBJECT} (counter value / sec)',
                            'type': 'DEPENDENT',
                            'key': 'varnish.stat["{#LOCATION_ID}","COUNTER.{#SUBJECT_ID}"]',
                            'value_type': 'FLOAT',
                            'units': 'eps',
                            'master_item_key': master,
                            'preprocessing': [
                                {
                                    'type': 'JSONPATH',
                                    'params': '$[\'{#LOCATION_ID}.COUNTER.{#SUBJECT_ID}\']',
                                    'error_handler': 'DISCARD_VALUE',
                                },
                                {
                                    'type': 'CHANGE_PER_SECOND',
                                },
                            ],
                        },
                    ],
                    [
                    ],
                    [
                    ]) }}
            </discovery_rules>

            {#-#############################################################-#}
            {#- MACROS -#}
            {#-#############################################################-#}

            <macros>
                {% for macro in [
                        ('{$VARNISH_CACHE.LOCATIONS}', ''),

                        ('{$VARNISH_CACHE.AGENT_PROCESSES.MIN}', '1'),
                        ('{$VARNISH_CACHE.BROADCASTER_PROCESSES.MIN}', '1'),
                        ('{$VARNISH_CACHE.NCSA_PROCESSES.MIN}', '1'),
                        ('{$VARNISH_CACHE.VARNISH_PROCESSES.MIN}', '2'),
                        ('{$VARNISH_CACHE.RAW_LOG_PROCESSES.MIN}', '1'),
                        ('{$VARNISH_CACHE.VCS_AGENT_PROCESSES.MIN}', '1'),

                        ('{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:backends}', '1d'),
                        ('{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:counters}', '1d'),
                        ('{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD}', '30d'),
                        ('{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:counters}', '60s'),
                        ('{$VARNISH_CACHE.LLD_UPDATE_INTERVAL}', '3600s'),

                        ('{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}', '30d'),
                        ('{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}', '365d'),
                        ('{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}', '60s'),

                        ('{$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.MAX}', '0.0'),
                        ('{$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.SAMPLES}', '#10'),
                        ('{$VARNISH_CACHE.HTTP_HEADER_OVERFLOWS_RATE.MAX}', '0.0'),
                        ('{$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.MAX}', '0.0'),
                        ('{$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.RECOVERY.SAMPLES}', '#10'),
                        ('{$VARNISH_CACHE.MAIN_UPTIME.MIN}', '600s'),
                        ('{$VARNISH_CACHE.MGT_UPTIME.MIN}', '600s'),
                        ('{$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.MAX}', '0.0'),
                        ('{$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.RECOVERY.SAMPLES}', '#10'),
                        ('{$VARNISH_CACHE.THREADS.MAX}', '1000'),
                        ('{$VARNISH_CACHE.VCL_FAILURES_RATE.MAX}', '0.0'),
                        ('{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX}', '0.0'),

                        ('{$VARNISH_CACHE.BACKEND_HEALTHINESS.SAMPLES}', '#1'),

                        ('{$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.MAX}', '0.0'),
                        ('{$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.RECOVERY.SAMPLES}', '#10'),
                        ('{$VARNISH_CACHE.SPARE_NODES.MIN}', '900000'),
                        ('{$VARNISH_CACHE.SPARE_NODES.RECOVERY.MIN}', '1000000'),

                        ('{$VARNISH_CACHE.MSE_BOOK_SPACE.MIN}', '75MB'),
                        ('{$VARNISH_CACHE.MSE_BOOK_SPACE.RECOVERY.MIN}', '100MB'),
                    ] %}
                    <macro>
                        <macro>{{ macro[0]|e }}</macro>
                        <value>{{ macro[1]|e }}</value>
                    </macro>
                {% endfor %}
            </macros>
        </template>
    </templates>

    {#-#####################################################################-#}
    {#- TRIGGERS -#}
    {#-#####################################################################-#}

    {% if version in ('4.0', '4.2') %}
        <triggers>
            {% for definition in [
                    varnish_processes_trigger,
                    varnish_ncsa_log_processes_trigger,
                    varnish_raw_log_processes_trigger,
                    varnish_agent_processes_trigger,
                    varnish_broadcaster_processes_trigger,
                    vcs_agent_processes_trigger,
                ] %}
                <trigger>
                    {{ trigger(definition) }}
                </trigger>
            {% endfor %}
        </triggers>
    {% endif %}
</zabbix_export>
